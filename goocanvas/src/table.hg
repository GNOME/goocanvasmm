/* Copyright (C) 1998-2006 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


#include <goocanvasmm/group.h>
#include <gtkmm/enums.h>
#include <gtkmm/box.h> // For Gtk::PackOptions.

_DEFS(goocanvasmm,libgoocanvas)

namespace Goocanvas
{

class Table : public Goocanvas::Group
{
  _CLASS_GOBJECT(Table, GooCanvasTable, GOO_CANVAS_TABLE, Goocanvas::Group, GooCanvasGroup)
protected:
  _CTOR_DEFAULT()
  _IGNORE(goo_canvas_table_new)

public:

  _WRAP_CREATE()

  /** This convenience method is easier than setting the properties individually,
   * and is similar to Gtk::Table::attach().
   *
   * @param item The canvas item to add to the table.
   * @param left_attach The left column to attach the item.
   * @param right_attach The right column to attach the item. Just use left_attach+1 for a single column.
   * @param top_attach The top column to attach the item.
   * @param bottom_attach The bottom column to attach the item. Just use top_attach+1 for a single column.
   * @param xoptions Whether the item should expand or shrink.
   * @param yoptions Whether the item should expand or shrink.
   * @param left_padding The padding at the left.
   * @param right_padding The padding at the right.
   * @param top_padding The padding at the top.
   * @param bottom_padding The padding at the bottom.
   */
  void attach(const Glib::RefPtr<Item>& item, guint left_attach, guint right_attach, guint top_attach, guint bottom_attach, Gtk::PackOptions xoptions = Gtk::PACK_EXPAND_WIDGET, Gtk::PackOptions yoptions = Gtk::PACK_EXPAND_WIDGET, double left_padding = 0.0, double right_padding = 0.0, double top_padding = 0.0, double bottom_padding = 0.0);

  void set_align(const Glib::RefPtr<Item>& child, Gtk::Align xalign = Gtk::Align::START, Gtk::Align yalign = Gtk::Align::START);

  //We put these in item.hg instead.
  //See the comment there.
  //_WRAP_PROPERTY("x", double)
  //_WRAP_PROPERTY("y", double)
  //_WRAP_PROPERTY("width", double)
  //_WRAP_PROPERTY("height", double)
  _WRAP_PROPERTY("row-spacing", double)
  _WRAP_PROPERTY("column-spacing", double)
  _WRAP_PROPERTY("homogeneous-rows", bool)
  _WRAP_PROPERTY("homogeneous-columns", bool)
  _WRAP_PROPERTY("x-border-spacing", double)
  _WRAP_PROPERTY("y-border-spacing", double)
  _WRAP_PROPERTY("vert-grid-line-width", double)
  _WRAP_PROPERTY("horz-grid-line-width", double)
};

} //namespace Goocanvas

