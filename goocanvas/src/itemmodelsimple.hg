/* Copyright (C) 1998-2006 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <gdkmm/pixbuf.h>
#include <cairomm/cairomm.h>
#include <goocanvasmm/itemmodel.h>
#include <goocanvasmm/linedash.h>
#include <goocanvasmm/style.h>

_DEFS(goocanvasmm,libgoocanvas)
_PINCLUDE(glibmm/private/object_p.h)

namespace Goocanvas
{

class ItemModelSimple :
  public Glib::Object,
  public Goocanvas::ItemModel
{
  _CLASS_GOBJECT(ItemModelSimple, GooCanvasItemModelSimple, GOO_CANVAS_ITEM_MODEL_SIMPLE, Glib::Object, GObject)
  _IMPLEMENTS_INTERFACE(ItemModel)

protected:
  _CTOR_DEFAULT

public:

  _WRAP_PROPERTY("antialias", Cairo::Antialias)
  _WRAP_PROPERTY("clip-fill-rule", Cairo::FillRule)
  _WRAP_PROPERTY("clip-path", Glib::ustring)
  _WRAP_PROPERTY("fill-color", Glib::ustring)
  _WRAP_PROPERTY("fill-color-rgba", guint)
  _WRAP_PROPERTY("fill-pattern", Cairo::RefPtr<Cairo::Pattern>)
  _WRAP_PROPERTY("fill-pixbuf", Glib::RefPtr<Gdk::Pixbuf>)
  _WRAP_PROPERTY("font", Glib::ustring)
  _WRAP_PROPERTY("font-desc", Pango::FontDescription)
  _WRAP_PROPERTY("hint-metrics", Cairo::HintMetrics)
  _WRAP_PROPERTY("line-cap", Cairo::LineCap)
  _WRAP_PROPERTY("line-dash", LineDash)
  _WRAP_PROPERTY("line-join", Cairo::LineJoin)
  _WRAP_PROPERTY("line-join-miter-limit", gdouble)
  _WRAP_PROPERTY("line-width", gdouble)
  _WRAP_PROPERTY("operator", Cairo::Operator)
  _WRAP_PROPERTY("stroke-color", Glib::ustring)
  _WRAP_PROPERTY("stroke-color-rgba", guint)
  _WRAP_PROPERTY("stroke-pattern", Cairo::RefPtr<Cairo::Pattern>)
  _WRAP_PROPERTY("stroke-pixbuf", Glib::RefPtr<Gdk::Pixbuf>)

};

}
